/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package infobip

import (
	"encoding/json"
)

// WhatsAppTemplateHeaderWhatsAppApiContent Template header. Should be defined, only if placeholders or media have been registered in the template's header.
type WhatsAppTemplateHeaderWhatsAppApiContent struct {
	Type string `json:"type"`
}

// NewWhatsAppTemplateHeaderWhatsAppApiContent instantiates a new WhatsAppTemplateHeaderWhatsAppApiContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsAppTemplateHeaderWhatsAppApiContent(type_ string) *WhatsAppTemplateHeaderWhatsAppApiContent {
	this := WhatsAppTemplateHeaderWhatsAppApiContent{}
	this.Type = type_
	return &this
}

// NewWhatsAppTemplateHeaderWhatsAppApiContentWithDefaults instantiates a new WhatsAppTemplateHeaderWhatsAppApiContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsAppTemplateHeaderWhatsAppApiContentWithDefaults() *WhatsAppTemplateHeaderWhatsAppApiContent {
	this := WhatsAppTemplateHeaderWhatsAppApiContent{}
	return &this
}

// GetType returns the Type field value
func (o *WhatsAppTemplateHeaderWhatsAppApiContent) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *WhatsAppTemplateHeaderWhatsAppApiContent) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *WhatsAppTemplateHeaderWhatsAppApiContent) SetType(v string) {
	o.Type = v
}

func (o WhatsAppTemplateHeaderWhatsAppApiContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsAppTemplateHeaderWhatsAppApiContent struct {
	value *WhatsAppTemplateHeaderWhatsAppApiContent
	isSet bool
}

func (v NullableWhatsAppTemplateHeaderWhatsAppApiContent) Get() *WhatsAppTemplateHeaderWhatsAppApiContent {
	return v.value
}

func (v *NullableWhatsAppTemplateHeaderWhatsAppApiContent) Set(val *WhatsAppTemplateHeaderWhatsAppApiContent) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsAppTemplateHeaderWhatsAppApiContent) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsAppTemplateHeaderWhatsAppApiContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsAppTemplateHeaderWhatsAppApiContent(val *WhatsAppTemplateHeaderWhatsAppApiContent) *NullableWhatsAppTemplateHeaderWhatsAppApiContent {
	return &NullableWhatsAppTemplateHeaderWhatsAppApiContent{value: val, isSet: true}
}

func (v NullableWhatsAppTemplateHeaderWhatsAppApiContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsAppTemplateHeaderWhatsAppApiContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
