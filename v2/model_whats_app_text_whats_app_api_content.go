/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package infobip

import (
	"encoding/json"
)

// WhatsAppTextWhatsAppApiContent Content of the message that will be sent.
type WhatsAppTextWhatsAppApiContent struct {
	// Text of the message that will be sent.
	Text string `json:"text"`
	// Allows for URL previews in text messages. If the value is set to `true`, text is expected to contain URL starting with `https://` or `http://`. The default value is `false`.
	PreviewUrl *bool `json:"previewUrl,omitempty"`
}

// NewWhatsAppTextWhatsAppApiContent instantiates a new WhatsAppTextWhatsAppApiContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsAppTextWhatsAppApiContent(text string) *WhatsAppTextWhatsAppApiContent {
	this := WhatsAppTextWhatsAppApiContent{}
	this.Text = text
	return &this
}

// NewWhatsAppTextWhatsAppApiContentWithDefaults instantiates a new WhatsAppTextWhatsAppApiContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsAppTextWhatsAppApiContentWithDefaults() *WhatsAppTextWhatsAppApiContent {
	this := WhatsAppTextWhatsAppApiContent{}
	return &this
}

// GetText returns the Text field value
func (o *WhatsAppTextWhatsAppApiContent) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *WhatsAppTextWhatsAppApiContent) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *WhatsAppTextWhatsAppApiContent) SetText(v string) {
	o.Text = v
}

// GetPreviewUrl returns the PreviewUrl field value if set, zero value otherwise.
func (o *WhatsAppTextWhatsAppApiContent) GetPreviewUrl() bool {
	if o == nil || o.PreviewUrl == nil {
		var ret bool
		return ret
	}
	return *o.PreviewUrl
}

// GetPreviewUrlOk returns a tuple with the PreviewUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppTextWhatsAppApiContent) GetPreviewUrlOk() (*bool, bool) {
	if o == nil || o.PreviewUrl == nil {
		return nil, false
	}
	return o.PreviewUrl, true
}

// HasPreviewUrl returns a boolean if a field has been set.
func (o *WhatsAppTextWhatsAppApiContent) HasPreviewUrl() bool {
	if o != nil && o.PreviewUrl != nil {
		return true
	}

	return false
}

// SetPreviewUrl gets a reference to the given bool and assigns it to the PreviewUrl field.
func (o *WhatsAppTextWhatsAppApiContent) SetPreviewUrl(v bool) {
	o.PreviewUrl = &v
}

func (o WhatsAppTextWhatsAppApiContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["text"] = o.Text
	}
	if o.PreviewUrl != nil {
		toSerialize["previewUrl"] = o.PreviewUrl
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsAppTextWhatsAppApiContent struct {
	value *WhatsAppTextWhatsAppApiContent
	isSet bool
}

func (v NullableWhatsAppTextWhatsAppApiContent) Get() *WhatsAppTextWhatsAppApiContent {
	return v.value
}

func (v *NullableWhatsAppTextWhatsAppApiContent) Set(val *WhatsAppTextWhatsAppApiContent) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsAppTextWhatsAppApiContent) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsAppTextWhatsAppApiContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsAppTextWhatsAppApiContent(val *WhatsAppTextWhatsAppApiContent) *NullableWhatsAppTextWhatsAppApiContent {
	return &NullableWhatsAppTextWhatsAppApiContent{value: val, isSet: true}
}

func (v NullableWhatsAppTextWhatsAppApiContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsAppTextWhatsAppApiContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
