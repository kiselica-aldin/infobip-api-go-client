/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package infobip

import (
	"encoding/json"
)

// UrlDeletionRequest struct for UrlDeletionRequest
type UrlDeletionRequest struct {
	// URL of the WhatsApp media to be deleted.
	Url string `json:"url"`
}

// NewUrlDeletionRequest instantiates a new UrlDeletionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUrlDeletionRequest(url string) *UrlDeletionRequest {
	this := UrlDeletionRequest{}
	this.Url = url
	return &this
}

// NewUrlDeletionRequestWithDefaults instantiates a new UrlDeletionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUrlDeletionRequestWithDefaults() *UrlDeletionRequest {
	this := UrlDeletionRequest{}
	return &this
}

// GetUrl returns the Url field value
func (o *UrlDeletionRequest) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *UrlDeletionRequest) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *UrlDeletionRequest) SetUrl(v string) {
	o.Url = v
}

func (o UrlDeletionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableUrlDeletionRequest struct {
	value *UrlDeletionRequest
	isSet bool
}

func (v NullableUrlDeletionRequest) Get() *UrlDeletionRequest {
	return v.value
}

func (v *NullableUrlDeletionRequest) Set(val *UrlDeletionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUrlDeletionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUrlDeletionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUrlDeletionRequest(val *UrlDeletionRequest) *NullableUrlDeletionRequest {
	return &NullableUrlDeletionRequest{value: val, isSet: true}
}

func (v NullableUrlDeletionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUrlDeletionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
