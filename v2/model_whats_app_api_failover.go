/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package infobip

import (
	"encoding/json"
)

// WhatsAppApiFailover SMS message to be sent if WhatsApp template message could not be delivered.
type WhatsAppApiFailover struct {
	// SMS sender number. Must be in international format.
	From string `json:"from"`
	// Text of the SMS that will be sent.
	Text string `json:"text"`
}

// NewWhatsAppApiFailover instantiates a new WhatsAppApiFailover object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsAppApiFailover(from string, text string) *WhatsAppApiFailover {
	this := WhatsAppApiFailover{}
	this.From = from
	this.Text = text
	return &this
}

// NewWhatsAppApiFailoverWithDefaults instantiates a new WhatsAppApiFailover object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsAppApiFailoverWithDefaults() *WhatsAppApiFailover {
	this := WhatsAppApiFailover{}
	return &this
}

// GetFrom returns the From field value
func (o *WhatsAppApiFailover) GetFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.From
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
func (o *WhatsAppApiFailover) GetFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.From, true
}

// SetFrom sets field value
func (o *WhatsAppApiFailover) SetFrom(v string) {
	o.From = v
}

// GetText returns the Text field value
func (o *WhatsAppApiFailover) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *WhatsAppApiFailover) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *WhatsAppApiFailover) SetText(v string) {
	o.Text = v
}

func (o WhatsAppApiFailover) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["from"] = o.From
	}
	if true {
		toSerialize["text"] = o.Text
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsAppApiFailover struct {
	value *WhatsAppApiFailover
	isSet bool
}

func (v NullableWhatsAppApiFailover) Get() *WhatsAppApiFailover {
	return v.value
}

func (v *NullableWhatsAppApiFailover) Set(val *WhatsAppApiFailover) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsAppApiFailover) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsAppApiFailover) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsAppApiFailover(val *WhatsAppApiFailover) *NullableWhatsAppApiFailover {
	return &NullableWhatsAppApiFailover{value: val, isSet: true}
}

func (v NullableWhatsAppApiFailover) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsAppApiFailover) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
