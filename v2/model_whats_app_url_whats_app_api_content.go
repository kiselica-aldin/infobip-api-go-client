/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package infobip

import (
	"encoding/json"
)

// WhatsAppUrlWhatsAppApiContent Array of urls information.
type WhatsAppUrlWhatsAppApiContent struct {
	// Contact's url.
	Url *string `json:"url,omitempty"`
	// Type of the url. Can be `HOME` or `WORK`.
	Type *string `json:"type,omitempty"`
}

// NewWhatsAppUrlWhatsAppApiContent instantiates a new WhatsAppUrlWhatsAppApiContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsAppUrlWhatsAppApiContent() *WhatsAppUrlWhatsAppApiContent {
	this := WhatsAppUrlWhatsAppApiContent{}
	return &this
}

// NewWhatsAppUrlWhatsAppApiContentWithDefaults instantiates a new WhatsAppUrlWhatsAppApiContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsAppUrlWhatsAppApiContentWithDefaults() *WhatsAppUrlWhatsAppApiContent {
	this := WhatsAppUrlWhatsAppApiContent{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *WhatsAppUrlWhatsAppApiContent) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppUrlWhatsAppApiContent) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *WhatsAppUrlWhatsAppApiContent) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *WhatsAppUrlWhatsAppApiContent) SetUrl(v string) {
	o.Url = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WhatsAppUrlWhatsAppApiContent) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppUrlWhatsAppApiContent) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WhatsAppUrlWhatsAppApiContent) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *WhatsAppUrlWhatsAppApiContent) SetType(v string) {
	o.Type = &v
}

func (o WhatsAppUrlWhatsAppApiContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsAppUrlWhatsAppApiContent struct {
	value *WhatsAppUrlWhatsAppApiContent
	isSet bool
}

func (v NullableWhatsAppUrlWhatsAppApiContent) Get() *WhatsAppUrlWhatsAppApiContent {
	return v.value
}

func (v *NullableWhatsAppUrlWhatsAppApiContent) Set(val *WhatsAppUrlWhatsAppApiContent) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsAppUrlWhatsAppApiContent) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsAppUrlWhatsAppApiContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsAppUrlWhatsAppApiContent(val *WhatsAppUrlWhatsAppApiContent) *NullableWhatsAppUrlWhatsAppApiContent {
	return &NullableWhatsAppUrlWhatsAppApiContent{value: val, isSet: true}
}

func (v NullableWhatsAppUrlWhatsAppApiContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsAppUrlWhatsAppApiContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
