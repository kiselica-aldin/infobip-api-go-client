/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package infobip

import (
	"encoding/json"
)

// EmailBulkStatusResponse struct for EmailBulkStatusResponse
type EmailBulkStatusResponse struct {
	Bulks          *[]EmailBulkStatusInfo `json:"bulks,omitempty"`
	ExternalBulkId *string                `json:"externalBulkId,omitempty"`
}

// NewEmailBulkStatusResponse instantiates a new EmailBulkStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailBulkStatusResponse() *EmailBulkStatusResponse {
	this := EmailBulkStatusResponse{}
	return &this
}

// NewEmailBulkStatusResponseWithDefaults instantiates a new EmailBulkStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailBulkStatusResponseWithDefaults() *EmailBulkStatusResponse {
	this := EmailBulkStatusResponse{}
	return &this
}

// GetBulks returns the Bulks field value if set, zero value otherwise.
func (o *EmailBulkStatusResponse) GetBulks() []EmailBulkStatusInfo {
	if o == nil || o.Bulks == nil {
		var ret []EmailBulkStatusInfo
		return ret
	}
	return *o.Bulks
}

// GetBulksOk returns a tuple with the Bulks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailBulkStatusResponse) GetBulksOk() (*[]EmailBulkStatusInfo, bool) {
	if o == nil || o.Bulks == nil {
		return nil, false
	}
	return o.Bulks, true
}

// HasBulks returns a boolean if a field has been set.
func (o *EmailBulkStatusResponse) HasBulks() bool {
	if o != nil && o.Bulks != nil {
		return true
	}

	return false
}

// SetBulks gets a reference to the given []EmailBulkStatusInfo and assigns it to the Bulks field.
func (o *EmailBulkStatusResponse) SetBulks(v []EmailBulkStatusInfo) {
	o.Bulks = &v
}

// GetExternalBulkId returns the ExternalBulkId field value if set, zero value otherwise.
func (o *EmailBulkStatusResponse) GetExternalBulkId() string {
	if o == nil || o.ExternalBulkId == nil {
		var ret string
		return ret
	}
	return *o.ExternalBulkId
}

// GetExternalBulkIdOk returns a tuple with the ExternalBulkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailBulkStatusResponse) GetExternalBulkIdOk() (*string, bool) {
	if o == nil || o.ExternalBulkId == nil {
		return nil, false
	}
	return o.ExternalBulkId, true
}

// HasExternalBulkId returns a boolean if a field has been set.
func (o *EmailBulkStatusResponse) HasExternalBulkId() bool {
	if o != nil && o.ExternalBulkId != nil {
		return true
	}

	return false
}

// SetExternalBulkId gets a reference to the given string and assigns it to the ExternalBulkId field.
func (o *EmailBulkStatusResponse) SetExternalBulkId(v string) {
	o.ExternalBulkId = &v
}

func (o EmailBulkStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bulks != nil {
		toSerialize["bulks"] = o.Bulks
	}
	if o.ExternalBulkId != nil {
		toSerialize["externalBulkId"] = o.ExternalBulkId
	}
	return json.Marshal(toSerialize)
}

type NullableEmailBulkStatusResponse struct {
	value *EmailBulkStatusResponse
	isSet bool
}

func (v NullableEmailBulkStatusResponse) Get() *EmailBulkStatusResponse {
	return v.value
}

func (v *NullableEmailBulkStatusResponse) Set(val *EmailBulkStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailBulkStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailBulkStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailBulkStatusResponse(val *EmailBulkStatusResponse) *NullableEmailBulkStatusResponse {
	return &NullableEmailBulkStatusResponse{value: val, isSet: true}
}

func (v NullableEmailBulkStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailBulkStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
