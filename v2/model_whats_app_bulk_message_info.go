/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package infobip

import (
	"encoding/json"
)

// WhatsAppBulkMessageInfo struct for WhatsAppBulkMessageInfo
type WhatsAppBulkMessageInfo struct {
	// Array of sent message objects, one object per every message.
	Messages *[]WhatsAppSingleMessageInfo `json:"messages,omitempty"`
	// The ID that uniquely identifies the request. Bulk ID will be received only when you send a message to more than one destination address.
	BulkId *string `json:"bulkId,omitempty"`
}

// NewWhatsAppBulkMessageInfo instantiates a new WhatsAppBulkMessageInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsAppBulkMessageInfo() *WhatsAppBulkMessageInfo {
	this := WhatsAppBulkMessageInfo{}
	return &this
}

// NewWhatsAppBulkMessageInfoWithDefaults instantiates a new WhatsAppBulkMessageInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsAppBulkMessageInfoWithDefaults() *WhatsAppBulkMessageInfo {
	this := WhatsAppBulkMessageInfo{}
	return &this
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *WhatsAppBulkMessageInfo) GetMessages() []WhatsAppSingleMessageInfo {
	if o == nil || o.Messages == nil {
		var ret []WhatsAppSingleMessageInfo
		return ret
	}
	return *o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppBulkMessageInfo) GetMessagesOk() (*[]WhatsAppSingleMessageInfo, bool) {
	if o == nil || o.Messages == nil {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *WhatsAppBulkMessageInfo) HasMessages() bool {
	if o != nil && o.Messages != nil {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []WhatsAppSingleMessageInfo and assigns it to the Messages field.
func (o *WhatsAppBulkMessageInfo) SetMessages(v []WhatsAppSingleMessageInfo) {
	o.Messages = &v
}

// GetBulkId returns the BulkId field value if set, zero value otherwise.
func (o *WhatsAppBulkMessageInfo) GetBulkId() string {
	if o == nil || o.BulkId == nil {
		var ret string
		return ret
	}
	return *o.BulkId
}

// GetBulkIdOk returns a tuple with the BulkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppBulkMessageInfo) GetBulkIdOk() (*string, bool) {
	if o == nil || o.BulkId == nil {
		return nil, false
	}
	return o.BulkId, true
}

// HasBulkId returns a boolean if a field has been set.
func (o *WhatsAppBulkMessageInfo) HasBulkId() bool {
	if o != nil && o.BulkId != nil {
		return true
	}

	return false
}

// SetBulkId gets a reference to the given string and assigns it to the BulkId field.
func (o *WhatsAppBulkMessageInfo) SetBulkId(v string) {
	o.BulkId = &v
}

func (o WhatsAppBulkMessageInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Messages != nil {
		toSerialize["messages"] = o.Messages
	}
	if o.BulkId != nil {
		toSerialize["bulkId"] = o.BulkId
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsAppBulkMessageInfo struct {
	value *WhatsAppBulkMessageInfo
	isSet bool
}

func (v NullableWhatsAppBulkMessageInfo) Get() *WhatsAppBulkMessageInfo {
	return v.value
}

func (v *NullableWhatsAppBulkMessageInfo) Set(val *WhatsAppBulkMessageInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsAppBulkMessageInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsAppBulkMessageInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsAppBulkMessageInfo(val *WhatsAppBulkMessageInfo) *NullableWhatsAppBulkMessageInfo {
	return &NullableWhatsAppBulkMessageInfo{value: val, isSet: true}
}

func (v NullableWhatsAppBulkMessageInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsAppBulkMessageInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
