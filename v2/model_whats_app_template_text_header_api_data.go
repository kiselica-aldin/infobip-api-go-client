/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package infobip

import (
	"encoding/json"
)

// WhatsAppTemplateTextHeaderApiData struct for WhatsAppTemplateTextHeaderApiData
type WhatsAppTemplateTextHeaderApiData struct {
	WhatsAppTemplateHeaderApiData
	// Template header text. Can contain up to 60 characters, with one placeholder {{1}}.
	Text string `json:"text"`
}

// NewWhatsAppTemplateTextHeaderApiData instantiates a new WhatsAppTemplateTextHeaderApiData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsAppTemplateTextHeaderApiData(text string) *WhatsAppTemplateTextHeaderApiData {
	this := WhatsAppTemplateTextHeaderApiData{}
	this.Text = text
	return &this
}

// NewWhatsAppTemplateTextHeaderApiDataWithDefaults instantiates a new WhatsAppTemplateTextHeaderApiData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsAppTemplateTextHeaderApiDataWithDefaults() *WhatsAppTemplateTextHeaderApiData {
	this := WhatsAppTemplateTextHeaderApiData{}
	return &this
}

// GetText returns the Text field value
func (o *WhatsAppTemplateTextHeaderApiData) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *WhatsAppTemplateTextHeaderApiData) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *WhatsAppTemplateTextHeaderApiData) SetText(v string) {
	o.Text = v
}

func (o WhatsAppTemplateTextHeaderApiData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedWhatsAppTemplateHeaderApiData, errWhatsAppTemplateHeaderApiData := json.Marshal(o.WhatsAppTemplateHeaderApiData)
	if errWhatsAppTemplateHeaderApiData != nil {
		return []byte{}, errWhatsAppTemplateHeaderApiData
	}
	errWhatsAppTemplateHeaderApiData = json.Unmarshal([]byte(serializedWhatsAppTemplateHeaderApiData), &toSerialize)
	if errWhatsAppTemplateHeaderApiData != nil {
		return []byte{}, errWhatsAppTemplateHeaderApiData
	}
	if true {
		toSerialize["text"] = o.Text
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsAppTemplateTextHeaderApiData struct {
	value *WhatsAppTemplateTextHeaderApiData
	isSet bool
}

func (v NullableWhatsAppTemplateTextHeaderApiData) Get() *WhatsAppTemplateTextHeaderApiData {
	return v.value
}

func (v *NullableWhatsAppTemplateTextHeaderApiData) Set(val *WhatsAppTemplateTextHeaderApiData) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsAppTemplateTextHeaderApiData) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsAppTemplateTextHeaderApiData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsAppTemplateTextHeaderApiData(val *WhatsAppTemplateTextHeaderApiData) *NullableWhatsAppTemplateTextHeaderApiData {
	return &NullableWhatsAppTemplateTextHeaderApiData{value: val, isSet: true}
}

func (v NullableWhatsAppTemplateTextHeaderApiData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsAppTemplateTextHeaderApiData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
