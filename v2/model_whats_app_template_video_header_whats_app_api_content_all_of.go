/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package infobip

import (
	"encoding/json"
)

// WhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf struct for WhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf
type WhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf struct {
	// URL of a video sent in the header. It is expected to be a valid URL starting with `https://`, `http://` or `ftp://`. Supported video types are `MP4`, `3GPP`. Maximum video size is 16MB.
	MediaUrl *string `json:"mediaUrl,omitempty"`
}

// NewWhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf instantiates a new WhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf() *WhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf {
	this := WhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf{}
	return &this
}

// NewWhatsAppTemplateVideoHeaderWhatsAppApiContentAllOfWithDefaults instantiates a new WhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsAppTemplateVideoHeaderWhatsAppApiContentAllOfWithDefaults() *WhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf {
	this := WhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf{}
	return &this
}

// GetMediaUrl returns the MediaUrl field value if set, zero value otherwise.
func (o *WhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf) GetMediaUrl() string {
	if o == nil || o.MediaUrl == nil {
		var ret string
		return ret
	}
	return *o.MediaUrl
}

// GetMediaUrlOk returns a tuple with the MediaUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf) GetMediaUrlOk() (*string, bool) {
	if o == nil || o.MediaUrl == nil {
		return nil, false
	}
	return o.MediaUrl, true
}

// HasMediaUrl returns a boolean if a field has been set.
func (o *WhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf) HasMediaUrl() bool {
	if o != nil && o.MediaUrl != nil {
		return true
	}

	return false
}

// SetMediaUrl gets a reference to the given string and assigns it to the MediaUrl field.
func (o *WhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf) SetMediaUrl(v string) {
	o.MediaUrl = &v
}

func (o WhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MediaUrl != nil {
		toSerialize["mediaUrl"] = o.MediaUrl
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf struct {
	value *WhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf
	isSet bool
}

func (v NullableWhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf) Get() *WhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf {
	return v.value
}

func (v *NullableWhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf) Set(val *WhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf(val *WhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf) *NullableWhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf {
	return &NullableWhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf{value: val, isSet: true}
}

func (v NullableWhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsAppTemplateVideoHeaderWhatsAppApiContentAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
