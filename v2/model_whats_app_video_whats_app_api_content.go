/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package infobip

import (
	"encoding/json"
)

// WhatsAppVideoWhatsAppApiContent Content of the message that will be sent.
type WhatsAppVideoWhatsAppApiContent struct {
	// URL of a video sent in the WhatsApp message. It is expected to be a valid URL starting with `https://`, `http://` or `ftp://`. Supported video types are `MP4`, `3GPP`. Maximum video size is 16MB.
	MediaUrl string `json:"mediaUrl"`
	// Caption of the video.
	Caption *string `json:"caption,omitempty"`
}

// NewWhatsAppVideoWhatsAppApiContent instantiates a new WhatsAppVideoWhatsAppApiContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsAppVideoWhatsAppApiContent(mediaUrl string) *WhatsAppVideoWhatsAppApiContent {
	this := WhatsAppVideoWhatsAppApiContent{}
	this.MediaUrl = mediaUrl
	return &this
}

// NewWhatsAppVideoWhatsAppApiContentWithDefaults instantiates a new WhatsAppVideoWhatsAppApiContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsAppVideoWhatsAppApiContentWithDefaults() *WhatsAppVideoWhatsAppApiContent {
	this := WhatsAppVideoWhatsAppApiContent{}
	return &this
}

// GetMediaUrl returns the MediaUrl field value
func (o *WhatsAppVideoWhatsAppApiContent) GetMediaUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MediaUrl
}

// GetMediaUrlOk returns a tuple with the MediaUrl field value
// and a boolean to check if the value has been set.
func (o *WhatsAppVideoWhatsAppApiContent) GetMediaUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediaUrl, true
}

// SetMediaUrl sets field value
func (o *WhatsAppVideoWhatsAppApiContent) SetMediaUrl(v string) {
	o.MediaUrl = v
}

// GetCaption returns the Caption field value if set, zero value otherwise.
func (o *WhatsAppVideoWhatsAppApiContent) GetCaption() string {
	if o == nil || o.Caption == nil {
		var ret string
		return ret
	}
	return *o.Caption
}

// GetCaptionOk returns a tuple with the Caption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppVideoWhatsAppApiContent) GetCaptionOk() (*string, bool) {
	if o == nil || o.Caption == nil {
		return nil, false
	}
	return o.Caption, true
}

// HasCaption returns a boolean if a field has been set.
func (o *WhatsAppVideoWhatsAppApiContent) HasCaption() bool {
	if o != nil && o.Caption != nil {
		return true
	}

	return false
}

// SetCaption gets a reference to the given string and assigns it to the Caption field.
func (o *WhatsAppVideoWhatsAppApiContent) SetCaption(v string) {
	o.Caption = &v
}

func (o WhatsAppVideoWhatsAppApiContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["mediaUrl"] = o.MediaUrl
	}
	if o.Caption != nil {
		toSerialize["caption"] = o.Caption
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsAppVideoWhatsAppApiContent struct {
	value *WhatsAppVideoWhatsAppApiContent
	isSet bool
}

func (v NullableWhatsAppVideoWhatsAppApiContent) Get() *WhatsAppVideoWhatsAppApiContent {
	return v.value
}

func (v *NullableWhatsAppVideoWhatsAppApiContent) Set(val *WhatsAppVideoWhatsAppApiContent) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsAppVideoWhatsAppApiContent) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsAppVideoWhatsAppApiContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsAppVideoWhatsAppApiContent(val *WhatsAppVideoWhatsAppApiContent) *NullableWhatsAppVideoWhatsAppApiContent {
	return &NullableWhatsAppVideoWhatsAppApiContent{value: val, isSet: true}
}

func (v NullableWhatsAppVideoWhatsAppApiContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsAppVideoWhatsAppApiContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
