/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package infobip

import (
	"encoding/json"
)

// WhatsAppTemplateUrlButtonApiDataAllOf struct for WhatsAppTemplateUrlButtonApiDataAllOf
type WhatsAppTemplateUrlButtonApiDataAllOf struct {
	// Button text.
	Text *string `json:"text,omitempty"`
	// URL to which the end-user will be directed when hitting the button. URL is expected to start with `https://` or `http://`. Can be static or dynamic. For dynamic URL registration, add a placeholder {{1}} at the end of the link. Example: `https://www.infobip.com/{{1}}`
	Url *string `json:"url,omitempty"`
}

// NewWhatsAppTemplateUrlButtonApiDataAllOf instantiates a new WhatsAppTemplateUrlButtonApiDataAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsAppTemplateUrlButtonApiDataAllOf() *WhatsAppTemplateUrlButtonApiDataAllOf {
	this := WhatsAppTemplateUrlButtonApiDataAllOf{}
	return &this
}

// NewWhatsAppTemplateUrlButtonApiDataAllOfWithDefaults instantiates a new WhatsAppTemplateUrlButtonApiDataAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsAppTemplateUrlButtonApiDataAllOfWithDefaults() *WhatsAppTemplateUrlButtonApiDataAllOf {
	this := WhatsAppTemplateUrlButtonApiDataAllOf{}
	return &this
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *WhatsAppTemplateUrlButtonApiDataAllOf) GetText() string {
	if o == nil || o.Text == nil {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppTemplateUrlButtonApiDataAllOf) GetTextOk() (*string, bool) {
	if o == nil || o.Text == nil {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *WhatsAppTemplateUrlButtonApiDataAllOf) HasText() bool {
	if o != nil && o.Text != nil {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *WhatsAppTemplateUrlButtonApiDataAllOf) SetText(v string) {
	o.Text = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *WhatsAppTemplateUrlButtonApiDataAllOf) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppTemplateUrlButtonApiDataAllOf) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *WhatsAppTemplateUrlButtonApiDataAllOf) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *WhatsAppTemplateUrlButtonApiDataAllOf) SetUrl(v string) {
	o.Url = &v
}

func (o WhatsAppTemplateUrlButtonApiDataAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Text != nil {
		toSerialize["text"] = o.Text
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsAppTemplateUrlButtonApiDataAllOf struct {
	value *WhatsAppTemplateUrlButtonApiDataAllOf
	isSet bool
}

func (v NullableWhatsAppTemplateUrlButtonApiDataAllOf) Get() *WhatsAppTemplateUrlButtonApiDataAllOf {
	return v.value
}

func (v *NullableWhatsAppTemplateUrlButtonApiDataAllOf) Set(val *WhatsAppTemplateUrlButtonApiDataAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsAppTemplateUrlButtonApiDataAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsAppTemplateUrlButtonApiDataAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsAppTemplateUrlButtonApiDataAllOf(val *WhatsAppTemplateUrlButtonApiDataAllOf) *NullableWhatsAppTemplateUrlButtonApiDataAllOf {
	return &NullableWhatsAppTemplateUrlButtonApiDataAllOf{value: val, isSet: true}
}

func (v NullableWhatsAppTemplateUrlButtonApiDataAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsAppTemplateUrlButtonApiDataAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
