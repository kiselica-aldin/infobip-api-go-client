/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package infobip

import (
	"encoding/json"
)

// WhatsAppSingleMessageStatus struct for WhatsAppSingleMessageStatus
type WhatsAppSingleMessageStatus struct {
	// Status group ID.
	GroupId *int32 `json:"groupId,omitempty"`
	// Status group name.
	GroupName *string `json:"groupName,omitempty"`
	// Status ID.
	Id *int32 `json:"id,omitempty"`
	// Status name.
	Name *string `json:"name,omitempty"`
	// Human-readable description of the status.
	Description *string `json:"description,omitempty"`
	// Action that should be taken to eliminate the error.
	Action *string `json:"action,omitempty"`
}

// NewWhatsAppSingleMessageStatus instantiates a new WhatsAppSingleMessageStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsAppSingleMessageStatus() *WhatsAppSingleMessageStatus {
	this := WhatsAppSingleMessageStatus{}
	return &this
}

// NewWhatsAppSingleMessageStatusWithDefaults instantiates a new WhatsAppSingleMessageStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsAppSingleMessageStatusWithDefaults() *WhatsAppSingleMessageStatus {
	this := WhatsAppSingleMessageStatus{}
	return &this
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *WhatsAppSingleMessageStatus) GetGroupId() int32 {
	if o == nil || o.GroupId == nil {
		var ret int32
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppSingleMessageStatus) GetGroupIdOk() (*int32, bool) {
	if o == nil || o.GroupId == nil {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *WhatsAppSingleMessageStatus) HasGroupId() bool {
	if o != nil && o.GroupId != nil {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given int32 and assigns it to the GroupId field.
func (o *WhatsAppSingleMessageStatus) SetGroupId(v int32) {
	o.GroupId = &v
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *WhatsAppSingleMessageStatus) GetGroupName() string {
	if o == nil || o.GroupName == nil {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppSingleMessageStatus) GetGroupNameOk() (*string, bool) {
	if o == nil || o.GroupName == nil {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *WhatsAppSingleMessageStatus) HasGroupName() bool {
	if o != nil && o.GroupName != nil {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *WhatsAppSingleMessageStatus) SetGroupName(v string) {
	o.GroupName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WhatsAppSingleMessageStatus) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppSingleMessageStatus) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WhatsAppSingleMessageStatus) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *WhatsAppSingleMessageStatus) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WhatsAppSingleMessageStatus) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppSingleMessageStatus) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WhatsAppSingleMessageStatus) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WhatsAppSingleMessageStatus) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WhatsAppSingleMessageStatus) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppSingleMessageStatus) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WhatsAppSingleMessageStatus) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WhatsAppSingleMessageStatus) SetDescription(v string) {
	o.Description = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *WhatsAppSingleMessageStatus) GetAction() string {
	if o == nil || o.Action == nil {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppSingleMessageStatus) GetActionOk() (*string, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *WhatsAppSingleMessageStatus) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *WhatsAppSingleMessageStatus) SetAction(v string) {
	o.Action = &v
}

func (o WhatsAppSingleMessageStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GroupId != nil {
		toSerialize["groupId"] = o.GroupId
	}
	if o.GroupName != nil {
		toSerialize["groupName"] = o.GroupName
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsAppSingleMessageStatus struct {
	value *WhatsAppSingleMessageStatus
	isSet bool
}

func (v NullableWhatsAppSingleMessageStatus) Get() *WhatsAppSingleMessageStatus {
	return v.value
}

func (v *NullableWhatsAppSingleMessageStatus) Set(val *WhatsAppSingleMessageStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsAppSingleMessageStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsAppSingleMessageStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsAppSingleMessageStatus(val *WhatsAppSingleMessageStatus) *NullableWhatsAppSingleMessageStatus {
	return &NullableWhatsAppSingleMessageStatus{value: val, isSet: true}
}

func (v NullableWhatsAppSingleMessageStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsAppSingleMessageStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
