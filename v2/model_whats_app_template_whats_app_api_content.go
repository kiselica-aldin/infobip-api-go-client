/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package infobip

import (
	"encoding/json"
)

// WhatsAppTemplateWhatsAppApiContent Content of the message that will be sent.
type WhatsAppTemplateWhatsAppApiContent struct {
	// Template name. Should contain only lowercase alphanumeric characters and underscores.
	TemplateName string                                 `json:"templateName"`
	TemplateData WhatsAppTemplateDataWhatsAppApiContent `json:"templateData"`
	// The code of language or locale to use. It must be exactly the same code which the template was registered with.
	Language string `json:"language"`
}

// NewWhatsAppTemplateWhatsAppApiContent instantiates a new WhatsAppTemplateWhatsAppApiContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsAppTemplateWhatsAppApiContent(templateName string, templateData WhatsAppTemplateDataWhatsAppApiContent, language string) *WhatsAppTemplateWhatsAppApiContent {
	this := WhatsAppTemplateWhatsAppApiContent{}
	this.TemplateName = templateName
	this.TemplateData = templateData
	this.Language = language
	return &this
}

// NewWhatsAppTemplateWhatsAppApiContentWithDefaults instantiates a new WhatsAppTemplateWhatsAppApiContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsAppTemplateWhatsAppApiContentWithDefaults() *WhatsAppTemplateWhatsAppApiContent {
	this := WhatsAppTemplateWhatsAppApiContent{}
	return &this
}

// GetTemplateName returns the TemplateName field value
func (o *WhatsAppTemplateWhatsAppApiContent) GetTemplateName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TemplateName
}

// GetTemplateNameOk returns a tuple with the TemplateName field value
// and a boolean to check if the value has been set.
func (o *WhatsAppTemplateWhatsAppApiContent) GetTemplateNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TemplateName, true
}

// SetTemplateName sets field value
func (o *WhatsAppTemplateWhatsAppApiContent) SetTemplateName(v string) {
	o.TemplateName = v
}

// GetTemplateData returns the TemplateData field value
func (o *WhatsAppTemplateWhatsAppApiContent) GetTemplateData() WhatsAppTemplateDataWhatsAppApiContent {
	if o == nil {
		var ret WhatsAppTemplateDataWhatsAppApiContent
		return ret
	}

	return o.TemplateData
}

// GetTemplateDataOk returns a tuple with the TemplateData field value
// and a boolean to check if the value has been set.
func (o *WhatsAppTemplateWhatsAppApiContent) GetTemplateDataOk() (*WhatsAppTemplateDataWhatsAppApiContent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TemplateData, true
}

// SetTemplateData sets field value
func (o *WhatsAppTemplateWhatsAppApiContent) SetTemplateData(v WhatsAppTemplateDataWhatsAppApiContent) {
	o.TemplateData = v
}

// GetLanguage returns the Language field value
func (o *WhatsAppTemplateWhatsAppApiContent) GetLanguage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *WhatsAppTemplateWhatsAppApiContent) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *WhatsAppTemplateWhatsAppApiContent) SetLanguage(v string) {
	o.Language = v
}

func (o WhatsAppTemplateWhatsAppApiContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["templateName"] = o.TemplateName
	}
	if true {
		toSerialize["templateData"] = o.TemplateData
	}
	if true {
		toSerialize["language"] = o.Language
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsAppTemplateWhatsAppApiContent struct {
	value *WhatsAppTemplateWhatsAppApiContent
	isSet bool
}

func (v NullableWhatsAppTemplateWhatsAppApiContent) Get() *WhatsAppTemplateWhatsAppApiContent {
	return v.value
}

func (v *NullableWhatsAppTemplateWhatsAppApiContent) Set(val *WhatsAppTemplateWhatsAppApiContent) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsAppTemplateWhatsAppApiContent) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsAppTemplateWhatsAppApiContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsAppTemplateWhatsAppApiContent(val *WhatsAppTemplateWhatsAppApiContent) *NullableWhatsAppTemplateWhatsAppApiContent {
	return &NullableWhatsAppTemplateWhatsAppApiContent{value: val, isSet: true}
}

func (v NullableWhatsAppTemplateWhatsAppApiContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsAppTemplateWhatsAppApiContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
