/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package infobip

import (
	"encoding/json"
)

// WhatsAppAudioWhatsAppApiContent Content of the message that will be sent.
type WhatsAppAudioWhatsAppApiContent struct {
	// URL of an audio sent in the WhatsApp message. It is expected to be a valid URL starting with `https://`, `http://` or `ftp://`. Supported audio types are `AAC`, `AMR`, `MP3`, `MP4`, `OPUS`. Maximum audio size is 16MB.
	MediaUrl string `json:"mediaUrl"`
}

// NewWhatsAppAudioWhatsAppApiContent instantiates a new WhatsAppAudioWhatsAppApiContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsAppAudioWhatsAppApiContent(mediaUrl string) *WhatsAppAudioWhatsAppApiContent {
	this := WhatsAppAudioWhatsAppApiContent{}
	this.MediaUrl = mediaUrl
	return &this
}

// NewWhatsAppAudioWhatsAppApiContentWithDefaults instantiates a new WhatsAppAudioWhatsAppApiContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsAppAudioWhatsAppApiContentWithDefaults() *WhatsAppAudioWhatsAppApiContent {
	this := WhatsAppAudioWhatsAppApiContent{}
	return &this
}

// GetMediaUrl returns the MediaUrl field value
func (o *WhatsAppAudioWhatsAppApiContent) GetMediaUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MediaUrl
}

// GetMediaUrlOk returns a tuple with the MediaUrl field value
// and a boolean to check if the value has been set.
func (o *WhatsAppAudioWhatsAppApiContent) GetMediaUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediaUrl, true
}

// SetMediaUrl sets field value
func (o *WhatsAppAudioWhatsAppApiContent) SetMediaUrl(v string) {
	o.MediaUrl = v
}

func (o WhatsAppAudioWhatsAppApiContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["mediaUrl"] = o.MediaUrl
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsAppAudioWhatsAppApiContent struct {
	value *WhatsAppAudioWhatsAppApiContent
	isSet bool
}

func (v NullableWhatsAppAudioWhatsAppApiContent) Get() *WhatsAppAudioWhatsAppApiContent {
	return v.value
}

func (v *NullableWhatsAppAudioWhatsAppApiContent) Set(val *WhatsAppAudioWhatsAppApiContent) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsAppAudioWhatsAppApiContent) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsAppAudioWhatsAppApiContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsAppAudioWhatsAppApiContent(val *WhatsAppAudioWhatsAppApiContent) *NullableWhatsAppAudioWhatsAppApiContent {
	return &NullableWhatsAppAudioWhatsAppApiContent{value: val, isSet: true}
}

func (v NullableWhatsAppAudioWhatsAppApiContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsAppAudioWhatsAppApiContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
