/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package infobip

import (
	"encoding/json"
)

// SmsRegionalOptions struct for SmsRegionalOptions
type SmsRegionalOptions struct {
	// Distributed Ledger Technology (DLT) specific parameters required for sending SMS to phone numbers registered in India.
	IndiaDlt *SmsIndiaDltOptions `json:"indiaDlt,omitempty"`
}

// NewSmsRegionalOptions instantiates a new SmsRegionalOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmsRegionalOptions() *SmsRegionalOptions {
	this := SmsRegionalOptions{}
	return &this
}

// NewSmsRegionalOptionsWithDefaults instantiates a new SmsRegionalOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmsRegionalOptionsWithDefaults() *SmsRegionalOptions {
	this := SmsRegionalOptions{}
	return &this
}

// GetIndiaDlt returns the IndiaDlt field value if set, zero value otherwise.
func (o *SmsRegionalOptions) GetIndiaDlt() SmsIndiaDltOptions {
	if o == nil || o.IndiaDlt == nil {
		var ret SmsIndiaDltOptions
		return ret
	}
	return *o.IndiaDlt
}

// GetIndiaDltOk returns a tuple with the IndiaDlt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsRegionalOptions) GetIndiaDltOk() (*SmsIndiaDltOptions, bool) {
	if o == nil || o.IndiaDlt == nil {
		return nil, false
	}
	return o.IndiaDlt, true
}

// HasIndiaDlt returns a boolean if a field has been set.
func (o *SmsRegionalOptions) HasIndiaDlt() bool {
	if o != nil && o.IndiaDlt != nil {
		return true
	}

	return false
}

// SetIndiaDlt gets a reference to the given SmsIndiaDltOptions and assigns it to the IndiaDlt field.
func (o *SmsRegionalOptions) SetIndiaDlt(v SmsIndiaDltOptions) {
	o.IndiaDlt = &v
}

func (o SmsRegionalOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IndiaDlt != nil {
		toSerialize["indiaDlt"] = o.IndiaDlt
	}
	return json.Marshal(toSerialize)
}

type NullableSmsRegionalOptions struct {
	value *SmsRegionalOptions
	isSet bool
}

func (v NullableSmsRegionalOptions) Get() *SmsRegionalOptions {
	return v.value
}

func (v *NullableSmsRegionalOptions) Set(val *SmsRegionalOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsRegionalOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsRegionalOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsRegionalOptions(val *SmsRegionalOptions) *NullableSmsRegionalOptions {
	return &NullableSmsRegionalOptions{value: val, isSet: true}
}

func (v NullableSmsRegionalOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsRegionalOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
