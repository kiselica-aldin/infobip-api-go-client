/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package infobip

import (
	"encoding/json"
)

// WhatsAppTemplateBodyWhatsAppApiContent Template body.
type WhatsAppTemplateBodyWhatsAppApiContent struct {
	// Template's parameters values ordered as registered in the template. The value must not be null, but can be an empty array if the template was registered without placeholders. Values within the array must not be null or empty.
	Placeholders []string `json:"placeholders"`
}

// NewWhatsAppTemplateBodyWhatsAppApiContent instantiates a new WhatsAppTemplateBodyWhatsAppApiContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsAppTemplateBodyWhatsAppApiContent(placeholders []string) *WhatsAppTemplateBodyWhatsAppApiContent {
	this := WhatsAppTemplateBodyWhatsAppApiContent{}
	this.Placeholders = placeholders
	return &this
}

// NewWhatsAppTemplateBodyWhatsAppApiContentWithDefaults instantiates a new WhatsAppTemplateBodyWhatsAppApiContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsAppTemplateBodyWhatsAppApiContentWithDefaults() *WhatsAppTemplateBodyWhatsAppApiContent {
	this := WhatsAppTemplateBodyWhatsAppApiContent{}
	return &this
}

// GetPlaceholders returns the Placeholders field value
func (o *WhatsAppTemplateBodyWhatsAppApiContent) GetPlaceholders() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Placeholders
}

// GetPlaceholdersOk returns a tuple with the Placeholders field value
// and a boolean to check if the value has been set.
func (o *WhatsAppTemplateBodyWhatsAppApiContent) GetPlaceholdersOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Placeholders, true
}

// SetPlaceholders sets field value
func (o *WhatsAppTemplateBodyWhatsAppApiContent) SetPlaceholders(v []string) {
	o.Placeholders = v
}

func (o WhatsAppTemplateBodyWhatsAppApiContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["placeholders"] = o.Placeholders
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsAppTemplateBodyWhatsAppApiContent struct {
	value *WhatsAppTemplateBodyWhatsAppApiContent
	isSet bool
}

func (v NullableWhatsAppTemplateBodyWhatsAppApiContent) Get() *WhatsAppTemplateBodyWhatsAppApiContent {
	return v.value
}

func (v *NullableWhatsAppTemplateBodyWhatsAppApiContent) Set(val *WhatsAppTemplateBodyWhatsAppApiContent) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsAppTemplateBodyWhatsAppApiContent) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsAppTemplateBodyWhatsAppApiContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsAppTemplateBodyWhatsAppApiContent(val *WhatsAppTemplateBodyWhatsAppApiContent) *NullableWhatsAppTemplateBodyWhatsAppApiContent {
	return &NullableWhatsAppTemplateBodyWhatsAppApiContent{value: val, isSet: true}
}

func (v NullableWhatsAppTemplateBodyWhatsAppApiContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsAppTemplateBodyWhatsAppApiContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
