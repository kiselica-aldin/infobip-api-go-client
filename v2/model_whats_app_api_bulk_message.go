/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package infobip

import (
	"encoding/json"
)

// WhatsAppApiBulkMessage struct for WhatsAppApiBulkMessage
type WhatsAppApiBulkMessage struct {
	// Array of messages that will be sent.
	Messages []WhatsAppApiFailoverMessage `json:"messages"`
	// The ID that uniquely identifies the request. Bulk ID will be received only when you send a message to more than one destination address.
	BulkId *string `json:"bulkId,omitempty"`
}

// NewWhatsAppApiBulkMessage instantiates a new WhatsAppApiBulkMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsAppApiBulkMessage(messages []WhatsAppApiFailoverMessage) *WhatsAppApiBulkMessage {
	this := WhatsAppApiBulkMessage{}
	this.Messages = messages
	return &this
}

// NewWhatsAppApiBulkMessageWithDefaults instantiates a new WhatsAppApiBulkMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsAppApiBulkMessageWithDefaults() *WhatsAppApiBulkMessage {
	this := WhatsAppApiBulkMessage{}
	return &this
}

// GetMessages returns the Messages field value
func (o *WhatsAppApiBulkMessage) GetMessages() []WhatsAppApiFailoverMessage {
	if o == nil {
		var ret []WhatsAppApiFailoverMessage
		return ret
	}

	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value
// and a boolean to check if the value has been set.
func (o *WhatsAppApiBulkMessage) GetMessagesOk() (*[]WhatsAppApiFailoverMessage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Messages, true
}

// SetMessages sets field value
func (o *WhatsAppApiBulkMessage) SetMessages(v []WhatsAppApiFailoverMessage) {
	o.Messages = v
}

// GetBulkId returns the BulkId field value if set, zero value otherwise.
func (o *WhatsAppApiBulkMessage) GetBulkId() string {
	if o == nil || o.BulkId == nil {
		var ret string
		return ret
	}
	return *o.BulkId
}

// GetBulkIdOk returns a tuple with the BulkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppApiBulkMessage) GetBulkIdOk() (*string, bool) {
	if o == nil || o.BulkId == nil {
		return nil, false
	}
	return o.BulkId, true
}

// HasBulkId returns a boolean if a field has been set.
func (o *WhatsAppApiBulkMessage) HasBulkId() bool {
	if o != nil && o.BulkId != nil {
		return true
	}

	return false
}

// SetBulkId gets a reference to the given string and assigns it to the BulkId field.
func (o *WhatsAppApiBulkMessage) SetBulkId(v string) {
	o.BulkId = &v
}

func (o WhatsAppApiBulkMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["messages"] = o.Messages
	}
	if o.BulkId != nil {
		toSerialize["bulkId"] = o.BulkId
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsAppApiBulkMessage struct {
	value *WhatsAppApiBulkMessage
	isSet bool
}

func (v NullableWhatsAppApiBulkMessage) Get() *WhatsAppApiBulkMessage {
	return v.value
}

func (v *NullableWhatsAppApiBulkMessage) Set(val *WhatsAppApiBulkMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsAppApiBulkMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsAppApiBulkMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsAppApiBulkMessage(val *WhatsAppApiBulkMessage) *NullableWhatsAppApiBulkMessage {
	return &NullableWhatsAppApiBulkMessage{value: val, isSet: true}
}

func (v NullableWhatsAppApiBulkMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsAppApiBulkMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
