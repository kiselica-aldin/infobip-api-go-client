/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package infobip

import (
	"encoding/json"
)

// WhatsAppTemplateImageHeaderWhatsAppApiContentAllOf struct for WhatsAppTemplateImageHeaderWhatsAppApiContentAllOf
type WhatsAppTemplateImageHeaderWhatsAppApiContentAllOf struct {
	// URL of an image sent in the header. It is expected to be a valid URL starting with `https://`, `http://` or `ftp://`. Supported image types are `JPG`, `JPEG`, `PNG`. Maximum image size is 5MB.
	MediaUrl *string `json:"mediaUrl,omitempty"`
}

// NewWhatsAppTemplateImageHeaderWhatsAppApiContentAllOf instantiates a new WhatsAppTemplateImageHeaderWhatsAppApiContentAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsAppTemplateImageHeaderWhatsAppApiContentAllOf() *WhatsAppTemplateImageHeaderWhatsAppApiContentAllOf {
	this := WhatsAppTemplateImageHeaderWhatsAppApiContentAllOf{}
	return &this
}

// NewWhatsAppTemplateImageHeaderWhatsAppApiContentAllOfWithDefaults instantiates a new WhatsAppTemplateImageHeaderWhatsAppApiContentAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsAppTemplateImageHeaderWhatsAppApiContentAllOfWithDefaults() *WhatsAppTemplateImageHeaderWhatsAppApiContentAllOf {
	this := WhatsAppTemplateImageHeaderWhatsAppApiContentAllOf{}
	return &this
}

// GetMediaUrl returns the MediaUrl field value if set, zero value otherwise.
func (o *WhatsAppTemplateImageHeaderWhatsAppApiContentAllOf) GetMediaUrl() string {
	if o == nil || o.MediaUrl == nil {
		var ret string
		return ret
	}
	return *o.MediaUrl
}

// GetMediaUrlOk returns a tuple with the MediaUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppTemplateImageHeaderWhatsAppApiContentAllOf) GetMediaUrlOk() (*string, bool) {
	if o == nil || o.MediaUrl == nil {
		return nil, false
	}
	return o.MediaUrl, true
}

// HasMediaUrl returns a boolean if a field has been set.
func (o *WhatsAppTemplateImageHeaderWhatsAppApiContentAllOf) HasMediaUrl() bool {
	if o != nil && o.MediaUrl != nil {
		return true
	}

	return false
}

// SetMediaUrl gets a reference to the given string and assigns it to the MediaUrl field.
func (o *WhatsAppTemplateImageHeaderWhatsAppApiContentAllOf) SetMediaUrl(v string) {
	o.MediaUrl = &v
}

func (o WhatsAppTemplateImageHeaderWhatsAppApiContentAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MediaUrl != nil {
		toSerialize["mediaUrl"] = o.MediaUrl
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsAppTemplateImageHeaderWhatsAppApiContentAllOf struct {
	value *WhatsAppTemplateImageHeaderWhatsAppApiContentAllOf
	isSet bool
}

func (v NullableWhatsAppTemplateImageHeaderWhatsAppApiContentAllOf) Get() *WhatsAppTemplateImageHeaderWhatsAppApiContentAllOf {
	return v.value
}

func (v *NullableWhatsAppTemplateImageHeaderWhatsAppApiContentAllOf) Set(val *WhatsAppTemplateImageHeaderWhatsAppApiContentAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsAppTemplateImageHeaderWhatsAppApiContentAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsAppTemplateImageHeaderWhatsAppApiContentAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsAppTemplateImageHeaderWhatsAppApiContentAllOf(val *WhatsAppTemplateImageHeaderWhatsAppApiContentAllOf) *NullableWhatsAppTemplateImageHeaderWhatsAppApiContentAllOf {
	return &NullableWhatsAppTemplateImageHeaderWhatsAppApiContentAllOf{value: val, isSet: true}
}

func (v NullableWhatsAppTemplateImageHeaderWhatsAppApiContentAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsAppTemplateImageHeaderWhatsAppApiContentAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
