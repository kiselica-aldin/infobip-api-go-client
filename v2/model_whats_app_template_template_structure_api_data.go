/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package infobip

import (
	"encoding/json"
)

// WhatsAppTemplateTemplateStructureApiData Template structure.
type WhatsAppTemplateTemplateStructureApiData struct {
	Header *WhatsAppTemplateHeaderApiData `json:"header,omitempty"`
	// Template body. Can be registered as plain text or text with placeholders. Placeholders have to be correctly formatted and in the correct order, regardless of other sections. Example: {{1}}, {{2}}, {{3}}...
	Body string `json:"body"`
	// Template footer. Plain text, up to 60 characters.
	Footer *string `json:"footer,omitempty"`
	// Template buttons. Can be either up to 3 `quick reply` buttons or up to 2 `call to action` buttons. Call to action buttons must be unique in type.
	Buttons *[]WhatsAppTemplateButtonApiData `json:"buttons,omitempty"`
	Type    *string                          `json:"type,omitempty"`
}

// NewWhatsAppTemplateTemplateStructureApiData instantiates a new WhatsAppTemplateTemplateStructureApiData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsAppTemplateTemplateStructureApiData(body string) *WhatsAppTemplateTemplateStructureApiData {
	this := WhatsAppTemplateTemplateStructureApiData{}
	this.Body = body
	return &this
}

// NewWhatsAppTemplateTemplateStructureApiDataWithDefaults instantiates a new WhatsAppTemplateTemplateStructureApiData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsAppTemplateTemplateStructureApiDataWithDefaults() *WhatsAppTemplateTemplateStructureApiData {
	this := WhatsAppTemplateTemplateStructureApiData{}
	return &this
}

// GetHeader returns the Header field value if set, zero value otherwise.
func (o *WhatsAppTemplateTemplateStructureApiData) GetHeader() WhatsAppTemplateHeaderApiData {
	if o == nil || o.Header == nil {
		var ret WhatsAppTemplateHeaderApiData
		return ret
	}
	return *o.Header
}

// GetHeaderOk returns a tuple with the Header field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppTemplateTemplateStructureApiData) GetHeaderOk() (*WhatsAppTemplateHeaderApiData, bool) {
	if o == nil || o.Header == nil {
		return nil, false
	}
	return o.Header, true
}

// HasHeader returns a boolean if a field has been set.
func (o *WhatsAppTemplateTemplateStructureApiData) HasHeader() bool {
	if o != nil && o.Header != nil {
		return true
	}

	return false
}

// SetHeader gets a reference to the given WhatsAppTemplateHeaderApiData and assigns it to the Header field.
func (o *WhatsAppTemplateTemplateStructureApiData) SetHeader(v WhatsAppTemplateHeaderApiData) {
	o.Header = &v
}

// GetBody returns the Body field value
func (o *WhatsAppTemplateTemplateStructureApiData) GetBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *WhatsAppTemplateTemplateStructureApiData) GetBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *WhatsAppTemplateTemplateStructureApiData) SetBody(v string) {
	o.Body = v
}

// GetFooter returns the Footer field value if set, zero value otherwise.
func (o *WhatsAppTemplateTemplateStructureApiData) GetFooter() string {
	if o == nil || o.Footer == nil {
		var ret string
		return ret
	}
	return *o.Footer
}

// GetFooterOk returns a tuple with the Footer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppTemplateTemplateStructureApiData) GetFooterOk() (*string, bool) {
	if o == nil || o.Footer == nil {
		return nil, false
	}
	return o.Footer, true
}

// HasFooter returns a boolean if a field has been set.
func (o *WhatsAppTemplateTemplateStructureApiData) HasFooter() bool {
	if o != nil && o.Footer != nil {
		return true
	}

	return false
}

// SetFooter gets a reference to the given string and assigns it to the Footer field.
func (o *WhatsAppTemplateTemplateStructureApiData) SetFooter(v string) {
	o.Footer = &v
}

// GetButtons returns the Buttons field value if set, zero value otherwise.
func (o *WhatsAppTemplateTemplateStructureApiData) GetButtons() []WhatsAppTemplateButtonApiData {
	if o == nil || o.Buttons == nil {
		var ret []WhatsAppTemplateButtonApiData
		return ret
	}
	return *o.Buttons
}

// GetButtonsOk returns a tuple with the Buttons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppTemplateTemplateStructureApiData) GetButtonsOk() (*[]WhatsAppTemplateButtonApiData, bool) {
	if o == nil || o.Buttons == nil {
		return nil, false
	}
	return o.Buttons, true
}

// HasButtons returns a boolean if a field has been set.
func (o *WhatsAppTemplateTemplateStructureApiData) HasButtons() bool {
	if o != nil && o.Buttons != nil {
		return true
	}

	return false
}

// SetButtons gets a reference to the given []WhatsAppTemplateButtonApiData and assigns it to the Buttons field.
func (o *WhatsAppTemplateTemplateStructureApiData) SetButtons(v []WhatsAppTemplateButtonApiData) {
	o.Buttons = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WhatsAppTemplateTemplateStructureApiData) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppTemplateTemplateStructureApiData) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WhatsAppTemplateTemplateStructureApiData) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *WhatsAppTemplateTemplateStructureApiData) SetType(v string) {
	o.Type = &v
}

func (o WhatsAppTemplateTemplateStructureApiData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Header != nil {
		toSerialize["header"] = o.Header
	}
	if true {
		toSerialize["body"] = o.Body
	}
	if o.Footer != nil {
		toSerialize["footer"] = o.Footer
	}
	if o.Buttons != nil {
		toSerialize["buttons"] = o.Buttons
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsAppTemplateTemplateStructureApiData struct {
	value *WhatsAppTemplateTemplateStructureApiData
	isSet bool
}

func (v NullableWhatsAppTemplateTemplateStructureApiData) Get() *WhatsAppTemplateTemplateStructureApiData {
	return v.value
}

func (v *NullableWhatsAppTemplateTemplateStructureApiData) Set(val *WhatsAppTemplateTemplateStructureApiData) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsAppTemplateTemplateStructureApiData) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsAppTemplateTemplateStructureApiData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsAppTemplateTemplateStructureApiData(val *WhatsAppTemplateTemplateStructureApiData) *NullableWhatsAppTemplateTemplateStructureApiData {
	return &NullableWhatsAppTemplateTemplateStructureApiData{value: val, isSet: true}
}

func (v NullableWhatsAppTemplateTemplateStructureApiData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsAppTemplateTemplateStructureApiData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
