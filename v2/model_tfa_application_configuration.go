/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package infobip

import (
	"encoding/json"
)

// TfaApplicationConfiguration struct for TfaApplicationConfiguration
type TfaApplicationConfiguration struct {
	// Tells if multiple PIN verifications are allowed.
	AllowMultiplePinVerifications *bool `json:"allowMultiplePinVerifications,omitempty"`
	// Number of possible PIN attempts.
	PinAttempts *int32 `json:"pinAttempts,omitempty"`
	// PIN time to live. Should be in format of `{timeLength}{timeUnit}`. Here `timeLength` is an optional positive integer with a default value of 1 and `timeUnit` is one of: `ms`, `s`, `m`, `h` or `d` representing milliseconds, seconds, minutes, hours and days respectively. Must not be larger that one year, although much lower values are recommended.
	PinTimeToLive *string `json:"pinTimeToLive,omitempty"`
	// Overall number of requests in time interval for generating a PIN and sending an SMS using single application. Should be in format of `{attempts}/{timeLength}{timeUnit}`. Here `attempts` is a mandatory positive integer and `timeLength` is an optional positive integer with a default value of 1. `timeUnit` is one of: `ms`, `s`, `m`, `h` or `d` representing milliseconds, seconds, minutes, hours and days respectively. Time component must not be larger that one year, although much lower values are recommended.
	SendPinPerApplicationLimit *string `json:"sendPinPerApplicationLimit,omitempty"`
	// Number of requests in time interval for generating a PIN and sending an SMS to one phone number (MSISDN). Should be in format of `{attempts}/{timeLength}{timeUnit}`. Here `attempts` is a mandatory positive integer and `timeLength` is an optional positive integer with a default value of 1. `timeUnit` is one of: `ms`, `s`, `m`, `h` or `d` representing milliseconds, seconds, minutes, hours and days respectively. Time component must not be larger that one year, although much lower values are recommended.
	SendPinPerPhoneNumberLimit *string `json:"sendPinPerPhoneNumberLimit,omitempty"`
	// Number of PIN verification requests in time interval from one phone number (MSISDN). Should be in format of `{attempts}/{timeLength}{timeUnit}`. Here `attempts` is a mandatory positive integer and `timeLength` is an optional positive integer with a default value of 1. `timeUnit` is one of: `ms`, `s`, `m`, `h` or `d` representing milliseconds, seconds, minutes, hours and days respectively. Time component must not be larger that one day, although much lower values are recommended.
	VerifyPinLimit *string `json:"verifyPinLimit,omitempty"`
}

// NewTfaApplicationConfiguration instantiates a new TfaApplicationConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTfaApplicationConfiguration() *TfaApplicationConfiguration {
	this := TfaApplicationConfiguration{}
	var allowMultiplePinVerifications bool = true
	this.AllowMultiplePinVerifications = &allowMultiplePinVerifications
	var pinAttempts int32 = 10
	this.PinAttempts = &pinAttempts
	var pinTimeToLive string = "15m"
	this.PinTimeToLive = &pinTimeToLive
	var sendPinPerApplicationLimit string = "10000/1d"
	this.SendPinPerApplicationLimit = &sendPinPerApplicationLimit
	var sendPinPerPhoneNumberLimit string = "3/1d"
	this.SendPinPerPhoneNumberLimit = &sendPinPerPhoneNumberLimit
	var verifyPinLimit string = "1/3s"
	this.VerifyPinLimit = &verifyPinLimit
	return &this
}

// NewTfaApplicationConfigurationWithDefaults instantiates a new TfaApplicationConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTfaApplicationConfigurationWithDefaults() *TfaApplicationConfiguration {
	this := TfaApplicationConfiguration{}
	var allowMultiplePinVerifications bool = true
	this.AllowMultiplePinVerifications = &allowMultiplePinVerifications
	var pinAttempts int32 = 10
	this.PinAttempts = &pinAttempts
	var pinTimeToLive string = "15m"
	this.PinTimeToLive = &pinTimeToLive
	var sendPinPerApplicationLimit string = "10000/1d"
	this.SendPinPerApplicationLimit = &sendPinPerApplicationLimit
	var sendPinPerPhoneNumberLimit string = "3/1d"
	this.SendPinPerPhoneNumberLimit = &sendPinPerPhoneNumberLimit
	var verifyPinLimit string = "1/3s"
	this.VerifyPinLimit = &verifyPinLimit
	return &this
}

// GetAllowMultiplePinVerifications returns the AllowMultiplePinVerifications field value if set, zero value otherwise.
func (o *TfaApplicationConfiguration) GetAllowMultiplePinVerifications() bool {
	if o == nil || o.AllowMultiplePinVerifications == nil {
		var ret bool
		return ret
	}
	return *o.AllowMultiplePinVerifications
}

// GetAllowMultiplePinVerificationsOk returns a tuple with the AllowMultiplePinVerifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TfaApplicationConfiguration) GetAllowMultiplePinVerificationsOk() (*bool, bool) {
	if o == nil || o.AllowMultiplePinVerifications == nil {
		return nil, false
	}
	return o.AllowMultiplePinVerifications, true
}

// HasAllowMultiplePinVerifications returns a boolean if a field has been set.
func (o *TfaApplicationConfiguration) HasAllowMultiplePinVerifications() bool {
	if o != nil && o.AllowMultiplePinVerifications != nil {
		return true
	}

	return false
}

// SetAllowMultiplePinVerifications gets a reference to the given bool and assigns it to the AllowMultiplePinVerifications field.
func (o *TfaApplicationConfiguration) SetAllowMultiplePinVerifications(v bool) {
	o.AllowMultiplePinVerifications = &v
}

// GetPinAttempts returns the PinAttempts field value if set, zero value otherwise.
func (o *TfaApplicationConfiguration) GetPinAttempts() int32 {
	if o == nil || o.PinAttempts == nil {
		var ret int32
		return ret
	}
	return *o.PinAttempts
}

// GetPinAttemptsOk returns a tuple with the PinAttempts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TfaApplicationConfiguration) GetPinAttemptsOk() (*int32, bool) {
	if o == nil || o.PinAttempts == nil {
		return nil, false
	}
	return o.PinAttempts, true
}

// HasPinAttempts returns a boolean if a field has been set.
func (o *TfaApplicationConfiguration) HasPinAttempts() bool {
	if o != nil && o.PinAttempts != nil {
		return true
	}

	return false
}

// SetPinAttempts gets a reference to the given int32 and assigns it to the PinAttempts field.
func (o *TfaApplicationConfiguration) SetPinAttempts(v int32) {
	o.PinAttempts = &v
}

// GetPinTimeToLive returns the PinTimeToLive field value if set, zero value otherwise.
func (o *TfaApplicationConfiguration) GetPinTimeToLive() string {
	if o == nil || o.PinTimeToLive == nil {
		var ret string
		return ret
	}
	return *o.PinTimeToLive
}

// GetPinTimeToLiveOk returns a tuple with the PinTimeToLive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TfaApplicationConfiguration) GetPinTimeToLiveOk() (*string, bool) {
	if o == nil || o.PinTimeToLive == nil {
		return nil, false
	}
	return o.PinTimeToLive, true
}

// HasPinTimeToLive returns a boolean if a field has been set.
func (o *TfaApplicationConfiguration) HasPinTimeToLive() bool {
	if o != nil && o.PinTimeToLive != nil {
		return true
	}

	return false
}

// SetPinTimeToLive gets a reference to the given string and assigns it to the PinTimeToLive field.
func (o *TfaApplicationConfiguration) SetPinTimeToLive(v string) {
	o.PinTimeToLive = &v
}

// GetSendPinPerApplicationLimit returns the SendPinPerApplicationLimit field value if set, zero value otherwise.
func (o *TfaApplicationConfiguration) GetSendPinPerApplicationLimit() string {
	if o == nil || o.SendPinPerApplicationLimit == nil {
		var ret string
		return ret
	}
	return *o.SendPinPerApplicationLimit
}

// GetSendPinPerApplicationLimitOk returns a tuple with the SendPinPerApplicationLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TfaApplicationConfiguration) GetSendPinPerApplicationLimitOk() (*string, bool) {
	if o == nil || o.SendPinPerApplicationLimit == nil {
		return nil, false
	}
	return o.SendPinPerApplicationLimit, true
}

// HasSendPinPerApplicationLimit returns a boolean if a field has been set.
func (o *TfaApplicationConfiguration) HasSendPinPerApplicationLimit() bool {
	if o != nil && o.SendPinPerApplicationLimit != nil {
		return true
	}

	return false
}

// SetSendPinPerApplicationLimit gets a reference to the given string and assigns it to the SendPinPerApplicationLimit field.
func (o *TfaApplicationConfiguration) SetSendPinPerApplicationLimit(v string) {
	o.SendPinPerApplicationLimit = &v
}

// GetSendPinPerPhoneNumberLimit returns the SendPinPerPhoneNumberLimit field value if set, zero value otherwise.
func (o *TfaApplicationConfiguration) GetSendPinPerPhoneNumberLimit() string {
	if o == nil || o.SendPinPerPhoneNumberLimit == nil {
		var ret string
		return ret
	}
	return *o.SendPinPerPhoneNumberLimit
}

// GetSendPinPerPhoneNumberLimitOk returns a tuple with the SendPinPerPhoneNumberLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TfaApplicationConfiguration) GetSendPinPerPhoneNumberLimitOk() (*string, bool) {
	if o == nil || o.SendPinPerPhoneNumberLimit == nil {
		return nil, false
	}
	return o.SendPinPerPhoneNumberLimit, true
}

// HasSendPinPerPhoneNumberLimit returns a boolean if a field has been set.
func (o *TfaApplicationConfiguration) HasSendPinPerPhoneNumberLimit() bool {
	if o != nil && o.SendPinPerPhoneNumberLimit != nil {
		return true
	}

	return false
}

// SetSendPinPerPhoneNumberLimit gets a reference to the given string and assigns it to the SendPinPerPhoneNumberLimit field.
func (o *TfaApplicationConfiguration) SetSendPinPerPhoneNumberLimit(v string) {
	o.SendPinPerPhoneNumberLimit = &v
}

// GetVerifyPinLimit returns the VerifyPinLimit field value if set, zero value otherwise.
func (o *TfaApplicationConfiguration) GetVerifyPinLimit() string {
	if o == nil || o.VerifyPinLimit == nil {
		var ret string
		return ret
	}
	return *o.VerifyPinLimit
}

// GetVerifyPinLimitOk returns a tuple with the VerifyPinLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TfaApplicationConfiguration) GetVerifyPinLimitOk() (*string, bool) {
	if o == nil || o.VerifyPinLimit == nil {
		return nil, false
	}
	return o.VerifyPinLimit, true
}

// HasVerifyPinLimit returns a boolean if a field has been set.
func (o *TfaApplicationConfiguration) HasVerifyPinLimit() bool {
	if o != nil && o.VerifyPinLimit != nil {
		return true
	}

	return false
}

// SetVerifyPinLimit gets a reference to the given string and assigns it to the VerifyPinLimit field.
func (o *TfaApplicationConfiguration) SetVerifyPinLimit(v string) {
	o.VerifyPinLimit = &v
}

func (o TfaApplicationConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowMultiplePinVerifications != nil {
		toSerialize["allowMultiplePinVerifications"] = o.AllowMultiplePinVerifications
	}
	if o.PinAttempts != nil {
		toSerialize["pinAttempts"] = o.PinAttempts
	}
	if o.PinTimeToLive != nil {
		toSerialize["pinTimeToLive"] = o.PinTimeToLive
	}
	if o.SendPinPerApplicationLimit != nil {
		toSerialize["sendPinPerApplicationLimit"] = o.SendPinPerApplicationLimit
	}
	if o.SendPinPerPhoneNumberLimit != nil {
		toSerialize["sendPinPerPhoneNumberLimit"] = o.SendPinPerPhoneNumberLimit
	}
	if o.VerifyPinLimit != nil {
		toSerialize["verifyPinLimit"] = o.VerifyPinLimit
	}
	return json.Marshal(toSerialize)
}

type NullableTfaApplicationConfiguration struct {
	value *TfaApplicationConfiguration
	isSet bool
}

func (v NullableTfaApplicationConfiguration) Get() *TfaApplicationConfiguration {
	return v.value
}

func (v *NullableTfaApplicationConfiguration) Set(val *TfaApplicationConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableTfaApplicationConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableTfaApplicationConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTfaApplicationConfiguration(val *TfaApplicationConfiguration) *NullableTfaApplicationConfiguration {
	return &NullableTfaApplicationConfiguration{value: val, isSet: true}
}

func (v NullableTfaApplicationConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTfaApplicationConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
