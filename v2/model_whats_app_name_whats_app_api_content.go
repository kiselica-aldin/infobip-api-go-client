/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package infobip

import (
	"encoding/json"
)

// WhatsAppNameWhatsAppApiContent Contains information about contact's name.
type WhatsAppNameWhatsAppApiContent struct {
	// Contact's first name.
	FirstName string `json:"firstName"`
	// Contact's last name.
	LastName *string `json:"lastName,omitempty"`
	// Contact's middle name.
	MiddleName *string `json:"middleName,omitempty"`
	// Contact's name suffix.
	NameSuffix *string `json:"nameSuffix,omitempty"`
	// Contact's name prefix.
	NamePrefix *string `json:"namePrefix,omitempty"`
	// Contact's full name as it normally appears.
	FormattedName string `json:"formattedName"`
}

// NewWhatsAppNameWhatsAppApiContent instantiates a new WhatsAppNameWhatsAppApiContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsAppNameWhatsAppApiContent(firstName string, formattedName string) *WhatsAppNameWhatsAppApiContent {
	this := WhatsAppNameWhatsAppApiContent{}
	this.FirstName = firstName
	this.FormattedName = formattedName
	return &this
}

// NewWhatsAppNameWhatsAppApiContentWithDefaults instantiates a new WhatsAppNameWhatsAppApiContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsAppNameWhatsAppApiContentWithDefaults() *WhatsAppNameWhatsAppApiContent {
	this := WhatsAppNameWhatsAppApiContent{}
	return &this
}

// GetFirstName returns the FirstName field value
func (o *WhatsAppNameWhatsAppApiContent) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *WhatsAppNameWhatsAppApiContent) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *WhatsAppNameWhatsAppApiContent) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *WhatsAppNameWhatsAppApiContent) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppNameWhatsAppApiContent) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *WhatsAppNameWhatsAppApiContent) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *WhatsAppNameWhatsAppApiContent) SetLastName(v string) {
	o.LastName = &v
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise.
func (o *WhatsAppNameWhatsAppApiContent) GetMiddleName() string {
	if o == nil || o.MiddleName == nil {
		var ret string
		return ret
	}
	return *o.MiddleName
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppNameWhatsAppApiContent) GetMiddleNameOk() (*string, bool) {
	if o == nil || o.MiddleName == nil {
		return nil, false
	}
	return o.MiddleName, true
}

// HasMiddleName returns a boolean if a field has been set.
func (o *WhatsAppNameWhatsAppApiContent) HasMiddleName() bool {
	if o != nil && o.MiddleName != nil {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given string and assigns it to the MiddleName field.
func (o *WhatsAppNameWhatsAppApiContent) SetMiddleName(v string) {
	o.MiddleName = &v
}

// GetNameSuffix returns the NameSuffix field value if set, zero value otherwise.
func (o *WhatsAppNameWhatsAppApiContent) GetNameSuffix() string {
	if o == nil || o.NameSuffix == nil {
		var ret string
		return ret
	}
	return *o.NameSuffix
}

// GetNameSuffixOk returns a tuple with the NameSuffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppNameWhatsAppApiContent) GetNameSuffixOk() (*string, bool) {
	if o == nil || o.NameSuffix == nil {
		return nil, false
	}
	return o.NameSuffix, true
}

// HasNameSuffix returns a boolean if a field has been set.
func (o *WhatsAppNameWhatsAppApiContent) HasNameSuffix() bool {
	if o != nil && o.NameSuffix != nil {
		return true
	}

	return false
}

// SetNameSuffix gets a reference to the given string and assigns it to the NameSuffix field.
func (o *WhatsAppNameWhatsAppApiContent) SetNameSuffix(v string) {
	o.NameSuffix = &v
}

// GetNamePrefix returns the NamePrefix field value if set, zero value otherwise.
func (o *WhatsAppNameWhatsAppApiContent) GetNamePrefix() string {
	if o == nil || o.NamePrefix == nil {
		var ret string
		return ret
	}
	return *o.NamePrefix
}

// GetNamePrefixOk returns a tuple with the NamePrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsAppNameWhatsAppApiContent) GetNamePrefixOk() (*string, bool) {
	if o == nil || o.NamePrefix == nil {
		return nil, false
	}
	return o.NamePrefix, true
}

// HasNamePrefix returns a boolean if a field has been set.
func (o *WhatsAppNameWhatsAppApiContent) HasNamePrefix() bool {
	if o != nil && o.NamePrefix != nil {
		return true
	}

	return false
}

// SetNamePrefix gets a reference to the given string and assigns it to the NamePrefix field.
func (o *WhatsAppNameWhatsAppApiContent) SetNamePrefix(v string) {
	o.NamePrefix = &v
}

// GetFormattedName returns the FormattedName field value
func (o *WhatsAppNameWhatsAppApiContent) GetFormattedName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FormattedName
}

// GetFormattedNameOk returns a tuple with the FormattedName field value
// and a boolean to check if the value has been set.
func (o *WhatsAppNameWhatsAppApiContent) GetFormattedNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FormattedName, true
}

// SetFormattedName sets field value
func (o *WhatsAppNameWhatsAppApiContent) SetFormattedName(v string) {
	o.FormattedName = v
}

func (o WhatsAppNameWhatsAppApiContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["firstName"] = o.FirstName
	}
	if o.LastName != nil {
		toSerialize["lastName"] = o.LastName
	}
	if o.MiddleName != nil {
		toSerialize["middleName"] = o.MiddleName
	}
	if o.NameSuffix != nil {
		toSerialize["nameSuffix"] = o.NameSuffix
	}
	if o.NamePrefix != nil {
		toSerialize["namePrefix"] = o.NamePrefix
	}
	if true {
		toSerialize["formattedName"] = o.FormattedName
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsAppNameWhatsAppApiContent struct {
	value *WhatsAppNameWhatsAppApiContent
	isSet bool
}

func (v NullableWhatsAppNameWhatsAppApiContent) Get() *WhatsAppNameWhatsAppApiContent {
	return v.value
}

func (v *NullableWhatsAppNameWhatsAppApiContent) Set(val *WhatsAppNameWhatsAppApiContent) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsAppNameWhatsAppApiContent) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsAppNameWhatsAppApiContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsAppNameWhatsAppApiContent(val *WhatsAppNameWhatsAppApiContent) *NullableWhatsAppNameWhatsAppApiContent {
	return &NullableWhatsAppNameWhatsAppApiContent{value: val, isSet: true}
}

func (v NullableWhatsAppNameWhatsAppApiContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsAppNameWhatsAppApiContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
