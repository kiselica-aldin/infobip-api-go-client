/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package infobip

import (
	"encoding/json"
)

// WhatsAppTemplateDocumentHeaderWhatsAppApiContent struct for WhatsAppTemplateDocumentHeaderWhatsAppApiContent
type WhatsAppTemplateDocumentHeaderWhatsAppApiContent struct {
	WhatsAppTemplateHeaderWhatsAppApiContent
	// URL of a document sent in the header. It is expected to be a valid URL starting with `https://`, `http://` or `ftp://`. Supported document type is `PDF`. Maximum document size is 100MB.
	MediaUrl string `json:"mediaUrl"`
	// Filename of the document.
	Filename string `json:"filename"`
}

// NewWhatsAppTemplateDocumentHeaderWhatsAppApiContent instantiates a new WhatsAppTemplateDocumentHeaderWhatsAppApiContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsAppTemplateDocumentHeaderWhatsAppApiContent(mediaUrl string, filename string, type_ string) *WhatsAppTemplateDocumentHeaderWhatsAppApiContent {
	this := WhatsAppTemplateDocumentHeaderWhatsAppApiContent{}
	this.Type = type_
	this.MediaUrl = mediaUrl
	this.Filename = filename
	return &this
}

// NewWhatsAppTemplateDocumentHeaderWhatsAppApiContentWithDefaults instantiates a new WhatsAppTemplateDocumentHeaderWhatsAppApiContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsAppTemplateDocumentHeaderWhatsAppApiContentWithDefaults() *WhatsAppTemplateDocumentHeaderWhatsAppApiContent {
	this := WhatsAppTemplateDocumentHeaderWhatsAppApiContent{}
	return &this
}

// GetMediaUrl returns the MediaUrl field value
func (o *WhatsAppTemplateDocumentHeaderWhatsAppApiContent) GetMediaUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MediaUrl
}

// GetMediaUrlOk returns a tuple with the MediaUrl field value
// and a boolean to check if the value has been set.
func (o *WhatsAppTemplateDocumentHeaderWhatsAppApiContent) GetMediaUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediaUrl, true
}

// SetMediaUrl sets field value
func (o *WhatsAppTemplateDocumentHeaderWhatsAppApiContent) SetMediaUrl(v string) {
	o.MediaUrl = v
}

// GetFilename returns the Filename field value
func (o *WhatsAppTemplateDocumentHeaderWhatsAppApiContent) GetFilename() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value
// and a boolean to check if the value has been set.
func (o *WhatsAppTemplateDocumentHeaderWhatsAppApiContent) GetFilenameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filename, true
}

// SetFilename sets field value
func (o *WhatsAppTemplateDocumentHeaderWhatsAppApiContent) SetFilename(v string) {
	o.Filename = v
}

func (o WhatsAppTemplateDocumentHeaderWhatsAppApiContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedWhatsAppTemplateHeaderWhatsAppApiContent, errWhatsAppTemplateHeaderWhatsAppApiContent := json.Marshal(o.WhatsAppTemplateHeaderWhatsAppApiContent)
	if errWhatsAppTemplateHeaderWhatsAppApiContent != nil {
		return []byte{}, errWhatsAppTemplateHeaderWhatsAppApiContent
	}
	errWhatsAppTemplateHeaderWhatsAppApiContent = json.Unmarshal([]byte(serializedWhatsAppTemplateHeaderWhatsAppApiContent), &toSerialize)
	if errWhatsAppTemplateHeaderWhatsAppApiContent != nil {
		return []byte{}, errWhatsAppTemplateHeaderWhatsAppApiContent
	}
	if true {
		toSerialize["mediaUrl"] = o.MediaUrl
	}
	if true {
		toSerialize["filename"] = o.Filename
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsAppTemplateDocumentHeaderWhatsAppApiContent struct {
	value *WhatsAppTemplateDocumentHeaderWhatsAppApiContent
	isSet bool
}

func (v NullableWhatsAppTemplateDocumentHeaderWhatsAppApiContent) Get() *WhatsAppTemplateDocumentHeaderWhatsAppApiContent {
	return v.value
}

func (v *NullableWhatsAppTemplateDocumentHeaderWhatsAppApiContent) Set(val *WhatsAppTemplateDocumentHeaderWhatsAppApiContent) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsAppTemplateDocumentHeaderWhatsAppApiContent) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsAppTemplateDocumentHeaderWhatsAppApiContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsAppTemplateDocumentHeaderWhatsAppApiContent(val *WhatsAppTemplateDocumentHeaderWhatsAppApiContent) *NullableWhatsAppTemplateDocumentHeaderWhatsAppApiContent {
	return &NullableWhatsAppTemplateDocumentHeaderWhatsAppApiContent{value: val, isSet: true}
}

func (v NullableWhatsAppTemplateDocumentHeaderWhatsAppApiContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsAppTemplateDocumentHeaderWhatsAppApiContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
