/**
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

package infobip

import (
	"encoding/json"
)

// WhatsAppTemplateImageHeaderWhatsAppApiContent struct for WhatsAppTemplateImageHeaderWhatsAppApiContent
type WhatsAppTemplateImageHeaderWhatsAppApiContent struct {
	WhatsAppTemplateHeaderWhatsAppApiContent
	// URL of an image sent in the header. It is expected to be a valid URL starting with `https://`, `http://` or `ftp://`. Supported image types are `JPG`, `JPEG`, `PNG`. Maximum image size is 5MB.
	MediaUrl string `json:"mediaUrl"`
}

// NewWhatsAppTemplateImageHeaderWhatsAppApiContent instantiates a new WhatsAppTemplateImageHeaderWhatsAppApiContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsAppTemplateImageHeaderWhatsAppApiContent(mediaUrl string, type_ string) *WhatsAppTemplateImageHeaderWhatsAppApiContent {
	this := WhatsAppTemplateImageHeaderWhatsAppApiContent{}
	this.Type = type_
	this.MediaUrl = mediaUrl
	return &this
}

// NewWhatsAppTemplateImageHeaderWhatsAppApiContentWithDefaults instantiates a new WhatsAppTemplateImageHeaderWhatsAppApiContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsAppTemplateImageHeaderWhatsAppApiContentWithDefaults() *WhatsAppTemplateImageHeaderWhatsAppApiContent {
	this := WhatsAppTemplateImageHeaderWhatsAppApiContent{}
	return &this
}

// GetMediaUrl returns the MediaUrl field value
func (o *WhatsAppTemplateImageHeaderWhatsAppApiContent) GetMediaUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MediaUrl
}

// GetMediaUrlOk returns a tuple with the MediaUrl field value
// and a boolean to check if the value has been set.
func (o *WhatsAppTemplateImageHeaderWhatsAppApiContent) GetMediaUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediaUrl, true
}

// SetMediaUrl sets field value
func (o *WhatsAppTemplateImageHeaderWhatsAppApiContent) SetMediaUrl(v string) {
	o.MediaUrl = v
}

func (o WhatsAppTemplateImageHeaderWhatsAppApiContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedWhatsAppTemplateHeaderWhatsAppApiContent, errWhatsAppTemplateHeaderWhatsAppApiContent := json.Marshal(o.WhatsAppTemplateHeaderWhatsAppApiContent)
	if errWhatsAppTemplateHeaderWhatsAppApiContent != nil {
		return []byte{}, errWhatsAppTemplateHeaderWhatsAppApiContent
	}
	errWhatsAppTemplateHeaderWhatsAppApiContent = json.Unmarshal([]byte(serializedWhatsAppTemplateHeaderWhatsAppApiContent), &toSerialize)
	if errWhatsAppTemplateHeaderWhatsAppApiContent != nil {
		return []byte{}, errWhatsAppTemplateHeaderWhatsAppApiContent
	}
	if true {
		toSerialize["mediaUrl"] = o.MediaUrl
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsAppTemplateImageHeaderWhatsAppApiContent struct {
	value *WhatsAppTemplateImageHeaderWhatsAppApiContent
	isSet bool
}

func (v NullableWhatsAppTemplateImageHeaderWhatsAppApiContent) Get() *WhatsAppTemplateImageHeaderWhatsAppApiContent {
	return v.value
}

func (v *NullableWhatsAppTemplateImageHeaderWhatsAppApiContent) Set(val *WhatsAppTemplateImageHeaderWhatsAppApiContent) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsAppTemplateImageHeaderWhatsAppApiContent) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsAppTemplateImageHeaderWhatsAppApiContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsAppTemplateImageHeaderWhatsAppApiContent(val *WhatsAppTemplateImageHeaderWhatsAppApiContent) *NullableWhatsAppTemplateImageHeaderWhatsAppApiContent {
	return &NullableWhatsAppTemplateImageHeaderWhatsAppApiContent{value: val, isSet: true}
}

func (v NullableWhatsAppTemplateImageHeaderWhatsAppApiContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsAppTemplateImageHeaderWhatsAppApiContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
